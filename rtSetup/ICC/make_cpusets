#!/bin/bash

#####################################################
## MagAO-X ICC cpuset configuration 
## 
## See https://linux.die.net/man/7/cpuset
##
## Run this as sudo at startup of the system
## Then run icc_procset after starting all loop processes
##
####################################################

source /etc/profile.d/cgroups1_cpuset_mountpoint.sh
cpusetMount=$CGROUPS1_CPUSET_MOUNTPOINT

# On ICC (v2) we have 2x18 = 36 real cores, which maps to 72 cpus
# To see the list: cat /proc/cpuinfo | egrep 'processor|physical id|core id'
# Each row in this table corresponds to a real core, and two logical processors.
#
# processor   physical-id    core-id    processor    physical-id    core-id  
#     0           0            0           36            0            0
#     1           0            1           37            0            1
#     2           0            2           38            0            2
#     3           0            3           39            0            3 
#     4           0            4           40            0            4 
#     5           0            8           41            0            8 
#     6           0            9           42            0            9 
#     7           0            10          43            0            10 
#     8           0            11          44            0            11 
#     9           0            16          45            0            16 
#    10           0            17          46            0            17 
#    11           0            18          47            0            18 
#    12           0            19          48            0            19  
#    13           0            20          49            0            20 
#    14           0            24          50            0            24 
#    15           0            25          51            0            25  
#    16           0            26          52            0            26 
#    17           0            27          53            0            27 
#    18           1            0           54            1            0  
#    19           1            1           55            1            1  
#    20           1            2           56            1            2  
#    21           1            3           57            1            3  
#    22           1            4           58            1            4  
#    23           1            8           59            1            8  
#    24           1            9           60            1            9  
#    25           1            10          61            1            10 
#    26           1            11          62            1            11 
#    27           1            16          63            1            16 
#    28           1            17          64            1            17 
#    29           1            18          65            1            18 
#    30           1            19          66            1            19 
#    31           1            20          67            1            20     
#    32           1            24          68            1            24      
#    33           1            25          69            1            25            
#    34           1            26          70            1            26 
#    35           1            27          71            1            27      

set -xeuo pipefail

#First enable everybody
for cpu in {0..71}
do
   /bin/echo 1 > /sys/devices/system/cpu/cpu$cpu/online 
done

# we will use processors 0-13 and 36-49 as the hyperthread system cpus (28),
# so we disable processors 50-71. This leaves us 14-35 (22) as single thread processors.

# Disable processors 50-71
for cpu in {50..71}
do
   /bin/echo 0 > /sys/devices/system/cpu/cpu$cpu/online 
done

cd $cpusetMount

#############################
# The system cpuset
#
############################
mkdir -p $cpusetMount/system
/bin/echo 0-13,36-49 > $cpusetMount/system/cpuset.cpus
/bin/echo 0-1 > $cpusetMount/system/cpuset.mems

# Now move all current tasks to system cpuset
# Note that this moves pid=1 (init) so all new process created should live here.
# We use || true to ignore failures, which are caused by stale PIDs
# or attempting to move unmovable kernel threads.
#
while read i; do
   /bin/echo -n $i 2>/dev/null || true
done < tasks > system/tasks

#A guess at how to setup load balancing 
echo 0 > cpuset.sched_load_balance
echo 1 > system/cpuset.sched_load_balance

###############
# Now setup cpusets for the ICC R/T processes
# We have cores 14-35 (22 cores) to use.
###############

## NCPC DM

#dm02comb
mkdir -p $cpusetMount/dm02comb
/bin/echo 14 > $cpusetMount/dm02comb/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02comb/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/dm02comb/cpuset.mems

#ncpc
mkdir -p $cpusetMount/ncpc
/bin/echo 15 > $cpusetMount/ncpc/cpuset.cpus
/bin/echo 1 > $cpusetMount/ncpc/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/ncpc/cpuset.mems

## camlowfs

#camlowfs
mkdir -p $cpusetMount/camlowfs
/bin/echo 16 > $cpusetMount/camlowfs/cpuset.cpus
/bin/echo 1 > $cpusetMount/camlowfs/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/camlowfs/cpuset.mems

#camlowfs_sw
mkdir -p $cpusetMount/camlowfs_sw
/bin/echo 17 > $cpusetMount/camlowfs_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camlowfs_sw/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/camlowfs_sw/cpuset.mems

## camsci1
#camsci1
mkdir -p $cpusetMount/camsci1
/bin/echo 18 > $cpusetMount/camsci1/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci1/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/camsci1/cpuset.mems

#camsci1_sw
mkdir -p $cpusetMount/camsci1_sw
/bin/echo 19 > $cpusetMount/camsci1_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci1_sw/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/camsci1_sw/cpuset.mems

## camsci2
#camsci2
mkdir -p $cpusetMount/camsci2
/bin/echo 20 > $cpusetMount/camsci2/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci2/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/camsci2/cpuset.mems

#camsci2_sw
mkdir -p $cpusetMount/camsci2_sw
/bin/echo 21 > $cpusetMount/camsci2_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci2_sw/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/camsci2_sw/cpuset.mems

#spare22
mkdir -p $cpusetMount/spare22
/bin/echo 22 > $cpusetMount/spare22/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare22/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare22/cpuset.mems

#spare23
mkdir -p $cpusetMount/spare23
/bin/echo 23 > $cpusetMount/spare23/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare23/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare23/cpuset.mems

## CACAO

#acqu_mvm
mkdir -p $cpusetMount/acqu_mvm
/bin/echo 24 > $cpusetMount/acqu_mvm/cpuset.cpus
/bin/echo 1 > $cpusetMount/acqu_mvm/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/acqu_mvm/cpuset.mems

#mfilt
mkdir -p $cpusetMount/mfilt
/bin/echo 25 > $cpusetMount/mfilt/cpuset.cpus
/bin/echo 1 > $cpusetMount/mfilt/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/mfilt/cpuset.mems

#mlat
mkdir -p $cpusetMount/mlat
/bin/echo 26 > $cpusetMount/mlat/cpuset.cpus
/bin/echo 1 > $cpusetMount/mlat/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/mlat/cpuset.mems

#RTmon
mkdir -p $cpusetMount/RTmon
/bin/echo 27 > $cpusetMount/RTmon/cpuset.cpus
/bin/echo 1 > $cpusetMount/RTmon/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/RTmon/cpuset.mems

#shmimTCP
mkdir -p $cpusetMount/shmimTCP
/bin/echo 28 > $cpusetMount/shmimTCP/cpuset.cpus
/bin/echo 1 > $cpusetMount/shmimTCP/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/shmimTCP/cpuset.mems

#spare29
mkdir -p $cpusetMount/spare29
/bin/echo 29 > $cpusetMount/spare29/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare29/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare29/cpuset.mems

#spare30
mkdir -p $cpusetMount/spare30
/bin/echo 30 > $cpusetMount/spare30/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare30/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare30/cpuset.mems

#spare31
mkdir -p $cpusetMount/spare31
/bin/echo 31 > $cpusetMount/spare31/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare31/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare31/cpuset.mems

#spare32
mkdir -p $cpusetMount/spare32
/bin/echo 32 > $cpusetMount/spare32/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare32/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare32/cpuset.mems

#spare33
mkdir -p $cpusetMount/spare33
/bin/echo 33 > $cpusetMount/spare33/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare33/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare33/cpuset.mems

#spare34
mkdir -p $cpusetMount/spare34
/bin/echo 34 > $cpusetMount/spare34/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare34/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare34/cpuset.mems

#spare35
mkdir -p $cpusetMount/spare35
/bin/echo 35 > $cpusetMount/spare35/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare35/cpuset.cpu_exclusive
/bin/echo 0-1 > $cpusetMount/spare35/cpuset.mems

echo "cpusets configured successfully"
