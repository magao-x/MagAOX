#!/bin/bash

#####################################################
## MagAO-X ICC cpuset configuration 
## 
## See https://linux.die.net/man/7/cpuset
##
## Run this as sudo at startup of the system
## Then run rtc_procset after starting all loop processes
##
####################################################

source /etc/profile.d/cgroups1_cpuset_mountpoint.sh
cpusetMount=$CGROUPS1_CPUSET_MOUNTPOINT

# RTC w/ AMD Threadripper 64 core / 128 threads

set -xeuo pipefail

# we will use processors 0-31 and 64-95 as the hyperthread system cpus (32 cores, 64 threads),
# so we disable processors 96-127. This leaves us 32-63 (32) as single thread r/t processors.

#enable everything first just to start from a known state
for cpu in {1..127}
do
   /bin/echo 1 > /sys/devices/system/cpu/cpu$cpu/online
done

# Disable processors 96-127, the hardware threads
for cpu in {96..127}
do
   /bin/echo 0 > /sys/devices/system/cpu/cpu$cpu/online 
done

cd $cpusetMount

#############################
# The system cpuset
#
############################
mkdir -p $cpusetMount/system
/bin/echo 0-31,64-95 > $cpusetMount/system/cpuset.cpus
/bin/echo 0 > $cpusetMount/system/cpuset.mems

# Now move all current tasks to system cpuset
# Note that this moves pid=1 (init) so all new process created should live here.
# We use || true to ignore failures, which are caused by stale PIDs
# or attempting to move unmovable kernel threads.
#
while read i; do
   /bin/echo -n $i 2>/dev/null || true
done < tasks > system/tasks

#A guess at how to setup load balancing 
echo 0 > cpuset.sched_load_balance
echo 1 > system/cpuset.sched_load_balance

###############
# Now setup cpusets for the RTC R/T processes
###############


#dm02comb
mkdir -p $cpusetMount/dm02comb
/bin/echo 32 > $cpusetMount/dm02comb/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02comb/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/dm02comb/cpuset.mems

#ncpc
mkdir -p $cpusetMount/ncpc
/bin/echo 33 > $cpusetMount/ncpc/cpuset.cpus
/bin/echo 1 > $cpusetMount/ncpc/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/ncpc/cpuset.mems

#camflowfs
mkdir -p $cpusetMount/camflowfs
/bin/echo 34 > $cpusetMount/camflowfs/cpuset.cpus
/bin/echo 1 > $cpusetMount/camflowfs/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camflowfs/cpuset.mems

#camflowfs_sw
mkdir -p $cpusetMount/camflowfs_sw
/bin/echo 35 > $cpusetMount/camflowfs_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camflowfs_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camflowfs_sw/cpuset.mems

#camllowfs
mkdir -p $cpusetMount/camllowfs
/bin/echo 36 > $cpusetMount/camllowfs/cpuset.cpus
/bin/echo 1 > $cpusetMount/camllowfs/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camllowfs/cpuset.mems

#camllowfs_sw
mkdir -p $cpusetMount/camllowfs_sw
/bin/echo 37 > $cpusetMount/camllowfs_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camllowfs_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camllowfs_sw/cpuset.mems

#camsci1
mkdir -p $cpusetMount/camsci1
/bin/echo 38 > $cpusetMount/camsci1/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci1/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camsci1/cpuset.mems

#camsci1_sw
mkdir -p $cpusetMount/camsci1_sw
/bin/echo 39 > $cpusetMount/camsci1_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci1_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camsci1_sw/cpuset.mems

#camsci2
mkdir -p $cpusetMount/camsci2
/bin/echo 40 > $cpusetMount/camsci2/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci2/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camsci2/cpuset.mems

#camsci2_sw offload process 
mkdir -p $cpusetMount/camsci2_sw
/bin/echo 41 > $cpusetMount/camsci2_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/camsci2_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camsci2_sw/cpuset.mems

#camlowfs_fit
mkdir -p $cpusetMount/camlowfs_fit
/bin/echo 42 > $cpusetMount/camlowfs_fit/cpuset.cpus
/bin/echo 1 > $cpusetMount/camlowfs_fit/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/camlowfs_fit/cpuset.mems

#spare43
mkdir -p $cpusetMount/spare43
/bin/echo 43 > $cpusetMount/spare43/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare43/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare43/cpuset.mems

#spare44
mkdir -p $cpusetMount/spare44
/bin/echo 44 > $cpusetMount/spare44/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare44/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare44/cpuset.mems

#acqu_mvm
mkdir -p $cpusetMount/acqu_mvm
/bin/echo 45 > $cpusetMount/acqu_mvm/cpuset.cpus
/bin/echo 1 > $cpusetMount/acqu_mvm/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/acqu_mvm/cpuset.mems

#mfilt
mkdir -p $cpusetMount/mfilt
/bin/echo 46 > $cpusetMount/mfilt/cpuset.cpus
/bin/echo 1 > $cpusetMount/mfilt/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/mfilt/cpuset.mems

#spare47
mkdir -p $cpusetMount/spare47
/bin/echo 47 > $cpusetMount/spare47/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare47/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare47/cpuset.mems

#mlat
mkdir -p $cpusetMount/mlat
/bin/echo 48 > $cpusetMount/mlat/cpuset.cpus
/bin/echo 1 > $cpusetMount/mlat/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/mlat/cpuset.mems

#RTmon
mkdir -p $cpusetMount/RTmon
/bin/echo 49 > $cpusetMount/RTmon/cpuset.cpus
/bin/echo 1 > $cpusetMount/RTmon/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/RTmon/cpuset.mems

#dm02disp03_sw
mkdir -p $cpusetMount/dm02disp03_sw
/bin/echo 50 > $cpusetMount/dm02disp03_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02disp03_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/dm02disp03_sw/cpuset.mems

#dm02disp04_sw
mkdir -p $cpusetMount/dm02disp04_sw
/bin/echo 51 > $cpusetMount/dm02disp04_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02disp04_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/dm02disp04_sw/cpuset.mems

#dm02disp08_sw
mkdir -p $cpusetMount/dm02disp08_sw
/bin/echo 52 > $cpusetMount/dm02disp08_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02disp08_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/dm02disp08_sw/cpuset.mems

#spare53
mkdir -p $cpusetMount/spare53
/bin/echo 53 > $cpusetMount/spare53/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare53/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare53/cpuset.mems

#spare54
mkdir -p $cpusetMount/spare54
/bin/echo 54 > $cpusetMount/spare54/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare54/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare54/cpuset.mems

#spare55
mkdir -p $cpusetMount/spare55
/bin/echo 55 > $cpusetMount/spare55/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare55/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare55/cpuset.mems

#spare56
mkdir -p $cpusetMount/spare56
/bin/echo 56 > $cpusetMount/spare56/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare56/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare56/cpuset.mems

#spare57
mkdir -p $cpusetMount/spare57
/bin/echo 57 > $cpusetMount/spare57/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare57/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare57/cpuset.mems

#shmimTCP
mkdir -p $cpusetMount/shmimTCP
/bin/echo 58 > $cpusetMount/shmimTCP/cpuset.cpus
/bin/echo 1 > $cpusetMount/shmimTCP/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/shmimTCP/cpuset.mems

#dm02disp09_sw
mkdir -p $cpusetMount/dm02disp09_sw
/bin/echo 59 > $cpusetMount/dm02disp09_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02disp09_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/dm02disp09_sw/cpuset.mems

#dm02disp_sw
mkdir -p $cpusetMount/dm02disp_sw
/bin/echo 60 > $cpusetMount/dm02disp_sw/cpuset.cpus
/bin/echo 1 > $cpusetMount/dm02disp_sw/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/dm02disp_sw/cpuset.mems

#spare61
mkdir -p $cpusetMount/spare61
/bin/echo 61 > $cpusetMount/spare61/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare61/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare61/cpuset.mems

#spare62
mkdir -p $cpusetMount/spare62
/bin/echo 62 > $cpusetMount/spare62/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare62/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare62/cpuset.mems

#spare63
mkdir -p $cpusetMount/spare63
/bin/echo 63 > $cpusetMount/spare63/cpuset.cpus
/bin/echo 1 > $cpusetMount/spare63/cpuset.cpu_exclusive
/bin/echo 0 > $cpusetMount/spare63/cpuset.mems


echo "cpusets configured successfully"
