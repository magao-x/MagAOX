#include <assert.h>
#include "../catch.hpp"
#include "generated/logCodes.hpp"
{% for type in types %}
#include "generated_tests/{{type.name}}_generated_tests.cpp"
{% endfor %}
#include "types/flatbuffer_log.hpp"

/* GENERATED ENTROPY TEST FILE 
 * s={{seedOpt}} n={{nTypesOpt}} e={{entropyOpt}} t={{dTypesOpt}}
 *
 * including types:
 {% for type in types %}
 *  - {{type.name}}
 {% endfor %}
 * 
 * generated by generateEntropyTests.py
 */


// random test values
 {% for var in testVariables %}
 {{var}}
 {% endfor %}


SCENARIO( "test_e{{entropyOpt}}_n{{nTypesOpt}}", "[]")
{
    GIVEN("a entropy={{entropyOpt}} and nTypes={{nTypesOpt}}")
    {
        WHEN("random values for fields")
        {
            {% for ctor in objectCtors %}
            {{ctor}}
            {% endfor %}

            {% for assert in catchAsserts %}
            {{assert}}
            {% endfor %}

        }
    }

}